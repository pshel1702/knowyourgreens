{"version":3,"sources":["components/Homepage.jsx","components/SearchBar.jsx","components/Login.jsx","components/SignUp.jsx","components/AddToFavorites.jsx","components/PlantCard.jsx","components/NavigateToPlant.jsx","components/Favorites.jsx","components/Nav.jsx","components/AllPlants.jsx","components/VarietalCard.jsx","components/AllVarietals.jsx","knowYourGreens.jsx"],"names":["Homepage","props","isLoggedIn","SearchBar","React","useState","plant","searchPlant","isPlant","setPlant","history","ReactRouterDOM","useHistory","handleInput","evt","target","value","useEffect","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","push","Login","setUser","isValid","username","setUsername","password","setPassword","handleUsername","handlePassword","SignUp","isNewUser","name","state","setState","handleChange","id","prevState","AddToFavorites","fav","onAddToFavorites","onRemoveFromFavorites","onAddFavs","onRemoveFavs","PlantCard","plant_id","img","favorites","NavigateToPlant","onShowDetails","Favorites","favoritePlants","isFav","favCard","Object","entries","item","Nav","logUserOut","onLogout","window","localStorage","removeItem","AllPlants","plants","getPlants","plantCards","values","plantCard","VarietalCard","sunlight","water","humidity","toxicity","temperature","AllVarietals","parentPlant","setParentPlant","setPlants","useParams","plantName","varietalCards","varietalCard","varietal","care","Sunlight","Water","Humidity","Toxicity","Temperature","App","user","setValid","setNewUser","setFavorites","useLocation","pathname","onLogin","onCreateUser","isUser","favs","updatedFavorites","filter","ReactDOM","render","document","querySelector"],"mappings":";;;;;;;AIAe,AKAf,AEAA,AJAA,APAe,AQAA,AFAA,ADAf,AKCe,AEDf,SRAwBkD,AJAAlD,AQAAqE,AFAAT,AICAqB,GFDT,CAAahF,IRAb,CAAkBA,AQAlB,EAAmB,CECnB,CAAsBA,CNDtB,AJAA,CIAwBA,AEAxB,CNAyB,AMAAA,EICzB,ENDA,AMC4B,CJD5B,CFA8B,CEAC;AFC1C,AJAA,AQAA,AFAA,AICA,MNDOC,AJAAA,AQAAA,AFAAI,AICAsC,IAAP,CJDA,EIC4D3C,CJD5CA,EFAhB,AJAA,AQAA,EECA,CNDqEA,AJAhDA,AQAYA,AFAjC,AICO2C,CJDAtC,GICP,CNDA,AJAA,AQAA,CJAOJ,AJAAA,AQAAA,AFAP,UFAA,AJAA,AQAA;AJAA,AKAJ,AFAA,ACAI,AFCA,AIAA,AEDJ,MRAsBiD,AIACmB,AFCb5D,AIAMwE,GNDZ,GAAqEjF,CECxD,CIAb,EFDA,AFCgBU,CFDhB,AMC4DV,CND1CkD,CIAelD,EJAjC,CMCA,CAAYiF,CFDZ,CAAmBZ,KFCW,CAAC1D,AIA/B,IFDA,MFCgB,EAAhB;AFDA,AJCA,AUAA,MNDsBwC,AJClBlD,AUAiBiF,KAArB,GAA4DlF,EVA5D,EAAe,CUAf,CAAqBkF,ENDrB,GAAqElF,AMCrE,KNDA,CAAsBmD,gBAAtB;AAAA,AJEI,AQDJ,AFCA,AIDA,AEAJ,MRD2CC,AEEjCQ,AIDqBuB,KFAlBb,GEAT,GAA4DtE,EFA5D,AFCmB,CEDDa,EFCI,AIDtB,CFAA,AEA2BsE,CVEnB,CQFc,EJDtB,GAAqEnF,CEE/D4D,AIDN,INDA,CAAuCR,QEEjB,GAAM,UFF5B;AAAA,AJGa,AQDTvC,AFCAJ,AIFJ,IFCII,AFCAJ,EFHyDkC,AJGhD,AUFuByC,CFC7B,CAAClE,EJFR,CEGW,CAACa,CFHyD/B,CMCrE,CVEsB,CMAlB,CNAmB,AUFqCA,CND5D,CAA6D2C,GIEzD,AEDJ,CNDA,AMCoCyC,QAApC,IJE4B/E,KAAK,CAACsC,IAA9B;ACDO,APCH,AQAJ4B,AFCH,AIHD,AECJ,GNAI,CECIA,EEFyCc,GHCzBxB,CCCV,CAACW,MEFX,CHCW,CAAmBxE,CPElB,AUHgDA,GFExD,CDDO,ACCayE,CEFxB,CHCoC,AGDSY,QFEzC,CAA+B,EEFnC,SFEI,iBRAI,eAEI,mDAFJ,eAGI,gFAHJ,CADJ;AIDJ,AGEA,APMC,AQLGhB,AEFJ,IFEIA,EJHEhB,AGECpD,QCCO,CJHC,CGEf,EHFkB,CGEuDD,GGArE,EHAJ,CAAOC,EHFDoD,QGEN,CHFkB,CAACxC,GAAD,EAAS,0BMGnB,gCAAK8B,IAAL,CADJ,eAEI,2CAFJ,eAGI,iCAAMsC,QAAN,CAHJ,eAII,wCAJJ,eAKI,iCAAMC,KAAN,CALJ,eAMI,2CANJ,eAOI,iCAAMC,QAAN,CAPJ,eAQI,2CARJ,eASI,iCAAMC,QAAN,CATJ,eAUI,8CAVJ,eAWI,iCAAMC,WAAN,CAXJ,CADJ;ANAIxE,AGCJ,ACEC,AFCD,AIWH,AEdD,IRDQA,EGCe6C,CHDZ,CAACxC,OGCR,GAAyElB,IHDrE,AEKA,CCJJ,CAAmB0D,SAAnB;AHAIP,AGAJ,APOA,AMHS,IFJLA,AEIK,ECJqBA,ODIZ,EAAC,KFJC,CAACR,CGArB,APQQ,GIRY,AGAqD3C,CHArE,IGAJ,CAA8BmD,gBAA9B;AHCC,AGDD,APQa,AQLb,AFCI,ADNO,AOGf,GRHI,CJUa,EORmCC,GFF5BG,ILUE,EAAC,GMHf,ADPG,CAAmBvD,GGM1B,EHNO,EAAyB,CEEpC,GAAyEA,KAAzE,CAAgDoD,qBAAhD,WCKQ;ADJR,APOQ,AQHI,AFAI,ADNhB,IGMY,AFAI,ECJVU,AFFCN,KCMgB,EEAF,AFAII,CDNzB,CGMsB,EHNsE5D,CLUhF,EORQ,EFFpB,CEEuB,AFFhBwD,EEEP,MFFA,sCLSQ,eAEI,gFAFJ,CADR;AIJA,AGDA,APWH,AEjBc,AMSH,AFAA,ADNR,AJFW,AWKf,MRCUF,AGDFS,AFHYpB,GHHIX,ADCA9B,CIEpB,CEGS,EFHmFF,CEGlF,ALNC,CAAeA,GEOR,AIGN,AHPZ,AJFW,CMKX,AFHgB2C,CHHL,AIQP,CFDiB,AEArB,ALNgC,CCDC,CGGjC,ODIMW,QIGO,IJHQ,CAACzC,GAAD,EAAS,IIGlB,CAAgB,OAAhB;AJFRA,AGDJ,ALNA,AMSoC,AFEvC,ADTG,AJDA,IGMIA,AIEgC,EDHhCmD,ACGkC,AHPjBP,CDKd,CAACvC,AIE+B,CHPvC,GAA4FlB,CEIjF,GAAG,CFJd,CAAqByD,EEIrB,CFJA,CDKI,EHNyBtD,KAAK,CAACC,QAAN,CAAe,EAAf,CAA7B;AGOIgD,AFPJ,AMQY,AHPZ,AJDA,AWKJ,IREQA,EFPGnB,AGCmBhC,OHD1B,GAA0BD,AGC1B,EGQgB,CHR4EA,EHD5F,CAAOiC,EGCP,CDMyB,ACNChC,CDMA0C,GFP1B,CEOyB,CAArB,ICNJ,kCGOY,CADJ,eAII,oBAAC,cAAD,CAAgB,OAAhB;AJHX,AGFD,ALNA,AMWoC,AHVpC,AJDA,GGKA,CIMoC,ENXrBT,AMWuB,AHVAwB,AJD/BrD,CMMH,CCKmC,GDL/B6C,ANNR,ECAA,CKMA,CFLA,CHD0BlD,EKMX0D,AFL6E1D,GHD5F,CAAekC,CGCf,CAAsCwB,GEKtC,EAAyB,ALNzB,IGCA;AMDW,AJOP,ACIQ,AHVZ,AJDA,MICiDP,AJDnC7C,EMOP,CIPagF,AJOZ5B,QNPR,CMOI,ACKY,EDLE,CIPP,CNCX,EMDkC,CNC0D1D,KAA5F,CAAiDmD,gBAAjD,gBGUY,CAJJ,eAOI,oBAAC,cAAD,CAAgB,OAAhB;AJHZ,AOVA,AJOQY,ALPR,AMaoC,AHbpC,IGaoC,EDN5BA,ACM8B,AHb6BX,EGa5B,GDN1B,GAAC,KAAN,GHIJ,EOXkCjD,ATANA,GGAhC,EMA2C,ATAN,CSAOC,ATANA,AGAsDJ,KAA5F,CAAmEoD,EMA7B,ATAN,CSAqB,ATAN,ESAT,ATAN,CSAhC,ATAA,eGAA;ADWS,AKXE,AEAX,AJQK,ALRL,AMaY,AHZZ,AJDA,AEHW,ICcF,CGLL,ACQanD,CHbbiD,GIDgBwB,AJCb,AFJajC,EIYZ,CFRA,CDUU,EAAC,AIGQ,ALjBhB,CAAgBzC,CEI3B,CIDW,CAAmBA,ENHnB,EAAuB,CMGvB,CRAiBG,CQAS,IRAJ,CAACC,COeb,OPfO,CAAe,IAAf,CAA5B,kCOaY,CAPJ,eAYI,oBAAC,cAAD,CAAgB,OAAhB;AJPR,AKVJ,AEDA,AJUQ2D,ALVR,AMkBoC,APlBpC,AEFA,IKoBoC,CJN1B9D,CKXHA,AEDAsF,AJUCxB,ALVD5B,AMkB+B,ALpB/BF,EKoBgC,GDR1B,EJZb,CIYc,ALVd,CEYS,CKXT,ANH4BjC,CQE5B,AHkBY,CDRJ,CET8DA,CLYzDkD,CDfb,CAAOjB,CCeS,CKZhB,CAAOhC,INHP,MMGA,ILagB;AAAQ,AKbxB,AEDA,ATAA,AMkBiD,AHnBb,AJCpC,AEFA,ICgBwB,AIIyB,ECjB/ByD,AEDE8B,ATAHpD,ADAV7B,AEFQmC,KCgBgB,AIIyB,EJJvBY,AII2BgB,APlB5D,EQCA,ANHA,EDEA,COCsEtE,ANH1CA,EQE5B,GFCA,ANHA,CMGkB0D,ANHHhB,SMGf,ANHA,YEIiBgB,SAHmB;ADepB,AKbhB,AFUQ,ACOI,AHnBwB,AJCpC,AEDA7B,EAAAA,GKoBiB5B,CClBWkD,ARDZ3C,GEDT,CAACsB,GAAR,CFCA,AEDYY,CKoBe,OClB3B,CNFA,EMEsE1C,ILYtD,CKZhB,CAA4BmD,CDmBP,SDTMc,IHIX,EKdhB,AFUiC,CAACC,OAAP,CAAeR,SAAS,CAACR,GAAD,CAAxB,CAAnB,ECOI,CAZJ,eAiBI,mBDZ8C,CCY7C,cAAD,CAAgB,OAAhB;AJRY,AKdxB,AEAA,AJUa,ALVb,AMsBoC,ALvBpC,ICewB,AIQY,ECtBSE,ADsBP,ALvBhC3C,EKuBiC,GJRR,CGJZ0D,CHIcd,ADfpB,GIWU,AJXP3C,SQCYP,ATAIA,EOAhC,GAAsEH,AEArC,ATAI,ACDP,CQCII,ATAIA,ACDPO,IMC/B,CAA6CyC,EFUhC,CIVe,ATAI,CSAW,ATAI,CCD/B,CQCY,ATAI,CSAhC,ATAA,ACDA,cMCA;ALcgB,AOdhB,AJWYY,ALXZ,AMsBY,AHxBwB,AJEpC,KOuBiB,CAAC/D,APvBZQ,EMWMuD,KNXC,EMWM,CCYF,APvBDtD,QGWP,CADL,CADJ,IHT8B,CMYd,ANZeC,EOwBV,QPxBL,EAAhB,8BOsBY,CAjBJ,eAsBI,oBAAC,cAAD,CAAgB,OAAhB;AJTf,AKjBG,AEDA,AJYqB,ALZrB,AM2BoC,AH1BpC,AFDA,IK2BoC,EG3B7BgE,ATAAtC,AM2B+B,EAAC,EDflB,EIZrB,ETAA,KKY8B,EAAC,GEXHlC,ANDFA,KMCO,ANDF,CMCGC,ANDFA,GIYhB,KEXY,ANDF,CMCiB,ANDF,EMCb,CAA5B,cJA2B;AIA3B,AEDA,AJY4C,ALZ5C,AM2BY,AH1Be,AJC3B,AEDI+B,IAAAA,CK2Ba,CG5BFsD,ATAEnD,AM4BCrC,AP1BZW,IMUsC,AFXpCP,EFAI,CIWmC,CJXhC,CQDf,AJYiDqD,AFXtB,CG2BV,AL5BwB,CDAzC,ADEiB,GAAG,IMUsC,CAACR,GAAD,CAAT,ANV3CtC,CMU0D,GCiB3C,ODjB4B,ANV7B,CAACC,GAAD,EAAS,6BOyBjB,CAtBJ,CADJ,CADJ;ACFA,AFWgB,ACuBnB,APhCOP,AEDA+B,IFCA/B,AEDA+B,EMDGsC,MAAP,ANCY,EAAG,CFCA,CAAC9D,AEHyB,GFGtB,CAACC,IMUC,ENVL,CAAWC,KAAZ,CAAX,WMUkB,kBAAD;AEZrB,AEAA,AJawB,ALZxB,AGAI,AJEH,AEDG4B,GFDJ,CECIA,EMFWiC,APCTrC,ECCE,EIWgB,AFZjBlC,AFCI,IIWiB,CEb5B,AJCY,CEYoBqD,AFZnB,IHAO,EGAR,CHAW,AGAhB,EEYkC,CAACR,CFZpBP,EEYmB,CIbrBjC,AJaY,CAAe,AFZ3C,CHAE6B,CGAqB,IEYK,CADX,MIZa,CAACmD,CTCZ,CAAC7E,GAAD,EAAS,ESDZ,EAApB;AAAA,AJcwB,ALZpBuB,AGAEc,AFHmC,GAAf,CDGtBd,ACHJ,EQCOuD,ENEDzC,EEYkB,CFZf,EEYkB,CFZf,CMFZ,AJc+BQ,ALZhB,CAAC7C,EGAV,CHAa,CAACC,IKYoB,CAACoC,CLZzB,CAAWnC,CKYa,CAAT,CAAe,ELZ/B,CAAX,EKY2B,CAFV,IIZd4E,SAAP;AFEAxF,AFawB,ALZvB,AGAI,AJELA,AENA,EMGAA,ARGAA,CCJA,IOCK,ARGA,CQHCa,ARGAA,EMUkB,OEbxB,ARGA,CQHgB,ARGA,CMUiB,EAAI0C,SEbjB,AFUC,ANPD,CAEnB,CAFD;AQFIvC,AEFJ,AJewB,AFZvB,AFLD,IMIIA,CJNgC,CMIhCsC,ANKJ,AFPOb,GMIE,AEFF,CFEG,AFac,CJjBxB,CQEQ,EAAR,MJekC,EAAI3C,KEb7B,CAAL,CACCwB,GFQgB,CETjB,CACM,UAACC,QAAD;AAAA,AEDVvB,AJcwB,ALbxB,ADIA,AETA,EQIAA,ITCMqC,ADIAvB,AETQ4B,CQIT,CAAC7B,EJckB,GEbFU,CNLtB,GQIA,CAAgB,AVKE,ECJE,COAU,ARIT,CQJUC,CPAR,GOAD,AFakB,EEb9B,AFakCwB,EIdxB,AVKdlC,ECJAuB,UDIe,CAAC3B,CMID,ELRE,ADIF,CCJGA,CDIM,ECJP,EAAS;AOAtB,AEANM,AJcoB,ALbpBmB,AGRgC,AJYhCzB,IULAM,ATCAmB,ADIAzB,CQNA,EAECY,ARIE,CAACP,CULC,CAAC,AJcc,CEfpB,CAEM,GPAK,CAACL,GAAG,CAACC,EOATc,ARIP,EULK,EFCC,AEDe,ATCT,CAAWb,COAT,GFa2B,CLb9B,CKakCqC,ALb7C;AOCIwB,AEDAxD,AJOa,ALNpB,AGTmC,AJahCD,AELJ,GDDA,CDMIA,EQJIyD,AEDAxD,ARAF0B,GFKG,CMCO,ANDN,EULI,EAAC,CFCE,CAAClB,ENDA,EMCD,AEFQ,CFEjB,ANDa,IIeC,KNVb,AELHkB,EFKyB,UELV,CAACjC,EIeC,CJfF,EAAS,qBIeR;AEbjB,AEDGQ,AJc+B,AFvBH,AJc5BD,AELJ,KMHA,CEGIC,AVKAD,IMS+B,ENTzB,CULC,CVKA,CULE,AJc2B,EAAEsC,GNVf,EEJP7C,GAAG,CIc4B,AJd3BC,CIc4BoC,GAAD,EJdnD;AMEH,AEDW,AJaU,ALZtB,AGXoC,AJe5B7B,AENJ,GMJJ,EAME,CPAIJ,ADIEI,CQVR,CNIW0B,EIKK,AJLZ,CIIQ,ENEG,EAAC,GCJE,GAAG,GSDO,CRDjBA,EAAP,GDEE9B,YAAe,CAACJ,GAAD,EAAS;AOE9B,AEJiB,AJiBN,ALdPA,AGZgC,AJgBxB,AEPR,IDGAA,EOCEgE,CENmB,ATKlB,CAAC3D,ACHOH,KAAX,GMIY,GAAG,EAAnB,CPDI,EDIuB,IEPZA,KAAX;AQGIO,ATCJW,ADEY,AELZY,IDGAZ,ACHAY,EQEIvB,CVCuB,GUDnB,CTCD,CSDGC,ATCFY,ACHA,CAAC,GQEK,CAACX,GTCR,EAAUa,CCHPW,GQEA,CAAe,GTClB,CAAP,CCHS;AMIb,AEDY,AJcNc,ALbL,AGHD,AJOQxC,AERK,ASHF,GVIX,GKgBMwC,ANTExC,GWXY+E,CXWR,EAAE9E,AWXH,GAAe,CXWR,CAACC,GMSC,CAACO,CIdK4D,ANDtB,GEeE,CAAoB3B,ANTZ,CAAe,MMSvB,IEbaC,MAAM,CAACa,CNHf9B,KMGQ,CAAc2B,GNJpB,GMIM,CAAnB,uBNFS5B,EAFI,EAEAhC,KAFA,MMI4B;AAArC,AEFyB,AJgBxB,AFhBI,AJOG,AETC,ASDb,IPGS,CFFG,CAAR,CQEU,ANAF,CIEFV,CJFImD,IIEC,IJFX,IJOsBnD,cQLtB;AACA,AERqB,AJsBtB,ALbH,AGJwB,AJMK,AEJ5B,ASJD,GTFA,CEIwB,CMLf,CAAL,CASCoB,AVES,CQHJsD,GERN,CASM,CNJuB,EAAC,EIGf,KECRrD,ATCP,EUPoBvB,KAAK,CDMnB,ACNoBC,GHMtB,KGNgB,CAAe,KAAf,CAAxB;AHMa,AEAH,ATCD,AGLL,AJC2B,AWH/B,IVOS,CDJA,CQGI,ARHT,CASCqB,IATD,CASM,CUNYC,ATCJ,EODI,APCH,EODI,CJHf,GMGsB,CAACC,AVMpBD,IUNW,EAAZ,CFAF,CRME,oBITGiB,IAAL,CADJ,eAEI;AIE4B,AEA1B,AJcV,ALbI,AGHS,AJQH,AEPV,ASLA,IPIa,CMPT,ATWM,COF0B,APEzBT,ACHLjB,ASLCqF,CDOF7E,ANHW,EIEuB,AJFrBgC,COJlB,CHMyCpD,AETrC,CAUM,CTCA,ADIYqB,GQNwB,CAACqB,CND7B,GFOY,AEPT,CQEVnB,AJeP,ANV2BD,IULrB,AVKY,EULJ,AVKR,ECHE,ACJNV,YAAe,CAACJ,GAAD,EAAS,6DDE1B,eAGI,yCAHJ,eAII;AOLA,AEEA4E,AJcC,ALXK,AGPN,AJQE,AENN5E,ASNJ,ILsBS,ALXK,AGTV,AFIAA,CFHA,CUKI4E,ACRKxD,CXaRR,AEPE,CAACP,GFHJ,CCQkB,ADEZ,CMSQ,AKtBlB,CVWwBD,CSHP,AJcE,CIdDW,GNHV,CIEI,AECK,CAAT,CVKGA,AEPP,IFOM,EAAQ,WIRT,CIEI,kBAAD,IJFJ;AIGQ,AECX,AJaD,ALXI,AGNgB,AJShB,AEPJK,IEFoB,AFEpBA,CQVA,CFWY,IAAI,ARMTL,CEPA,CMCavB,ANDZuC,EEFsB,AJSnB,EITqB3C,CIGP,ANDZ,CMCa0C,AFetB,ANTS,AEPCR,IMAN,AROJ,EAAc,EITd,AFEG,EAAgBS,KAAK,CAACP,EDKP,MCLf,EAA+BO,KAAK,CAACD,IAArC,CAAP,SIgBS,4CAAL,CADJ,EAEK,CAACoB,KAAD,iBACG,mHAHR,eAII,iCAAMD,cAAN,CAJJ,CAFJ;AEXgB,AEEf,AJmBJ,ALlBoC,AGNT,AJSZjC,AEPX,ASPD,GDLA,ARSA,CDOiC,AGNT,CMKtB,CFFc,AEEb8D,CNLwB,CHMU,ADGzB9D,CQNO,AJHUqB,CHMS,COHf7C,CJJf,GMMN,AVIiB,CQNS,AEb5B,ATgB0B,ADGNyB,CQNS2B,ERMjB,CQRA,ARQY7B,IAAZ,CWdgBzB,KAAK,CAACC,QAAN,CAAe,EAAf,CAA5B;AHSgB,AEGhBD,ATD6C,AGNX,AJUtBK,AWfZ,EDYAL,ETD6C,AGNX,EIIlB,CEGX,CAACa,ATD2C,AGNX,AJU1BR,ECJsC,AGNVmC,IADhC,EIKkB,ARMN,CUHpB,AVGqB,CQNS1C,AEGd,ETDU,EDIN,CAAR,KQTA,EEMQ;AFFJ,AEGZkB,ATFyD,AGLrC,AJUf,AERT,ASRA,IDaIA,ATFyD,AGLrC,EIIR,AGVTe,CXaC,EUAC,GTF4D,CDMzD,AWjBZ,CVWuE,COD9C,EAAIwB,CPCH,EGLc,EAAEP,AFGtC,IMHQ,KEOYwC,ONThB,EMSC,GAA2B;AFFpB,AEGRvE,ATHqE,AGJrD,AJWZZ,AETH,ASTT,IVW6E,AGJrD,AFEf,EMEO,AEGRY,ACdQmF,EXkBJ/F,IUJE,ATHuE,CCFnE,CQKH,ATHwE+B,AUXvF,CTSmB,CFSC,CAAC,GULe,CVKhB,CQPY,AROpB,EQPwBY,CJJS,EAAEC,aIDnC;AAMI,AEGR/B,ATJkB,AGPlB,AJeIZ,AEVR,IDCI,AGTJ,CADJ,AFUS,CMEO,AEGRY,ARLEqB,EFSEjC,KUJG,EAAE,AVIE,AETV,CFSWsB,IAAR,OQPyB,EAAIqB,EPArB,CCDR,OFQwB/C,KAAxB,kEEVR,eAGI,0CAHJ,eAII;AMPI,AEUA,ATJe,AGD9B,AJSY,AEPK,ASZd,IVW2B,ACCb,EMRN,EPOuB,EAAC,ECCV,EAAIY,MDDN,COER,GEEgB,CCfId,KAAK,CAACC,QAAN,CAAe,CHalC,CGbmB,CAAhC,sBHaY;AAAiB,AECZ,ATH0B,ADStC,AERG,ASZR,IVW2C,CDVvC,CQYyB,CEDO,CTDW,EAAC,COEd,EAAEC,OPFhB,YCEE;AMAV,AEIJiB,ATNmD,ADU1D,AER4B,ASb7B,GXDA,CCY2D,ACE9B,EMTrB,AEaAA,ACjBDoB,CHGH,CNU6B,EQIrB,ARJsB,EQIpBnB,ATNqD,EAAE,CUXrE,CDiBkB,ARJI,CQIHC,CTNC,QSMN,CAAe;AFDzBqD,AEEQ,ATP+D,ACElC,ASbzC,IHgBIA,APLuE,ACElC,EAAE,ASbzB2B,ETa4B,IDFqC,EOKrE,APLuEhE,ACE/D,CMGPT,CGhBf,GHgBI,CAAgBgD,CEEKY,QFFrB;AACH,AEA4B,ATNT,ADYpB,AEVqD,IDJ7C,ACI6C,GQIvC,ERJ4C,EAAE/C,KAAK,CAACD,EDDtD,ECCU,CFWlB;AUZgC,ATAjB,ADYV,AEX+D,ASZxE,IVWmB,ADYV,AEX+D,CQD/D,CAAL,ACXElC,CDoBDgB,CTTkB,EAAC,CSApB,CASM,ARRsE,CFW9D,AWvBL,CTYqE,CFW/D,CWvBHf,ETYM,IQQXgB,QAAD,ACpBoB,CAACf,UAAf,EAAhB;AHiBA,AEGU,ATTE,ADYR,AEXoF,IDJhF,ACIgF,CDRpF,ADoBK,CCrBT,ADqBUJ,MEZsF,CQQ1EmB,AVIb,CEZyFoB,OQQpE,CFF1B,AEE2BnB,IAAT,EAAZ,EVKE,gHAFR,eAGI,kHAHJ,eAII,6FAJJ,eAKI;AQVC,AEEC,ATLb,ADaiB,AEhBQ,ASXtB,IHiBS,ARUK,AEjBN,CQAJ,EAUCF,IAVD,CAUM,AVOY,CQVJ,CRUMR,CQVL,OEGRW,GCpBsBzB,CDoBvB,EAAQ,ECpBoB,CAACC,MTYb,ESZO,CAAe,EAAf,CAAjC;AHiBI,AEIIoF,AVMA,AEfyB,ASZjC,ITYiC,EQSzBA,ERT6B,EAAC,MAAZ,EMMlB,ARUI,EUPU,CAAC5D,IAAD,CAAd,qCFJJ,eAEI,iCAAMiD,UAAN,CAFJ,CADJ;AAMH,AEAQ,AVOW,AEjB6B,ASZ7C,IX6BgB,AEjB6B,CQFzC,CRE2C,ASZxCnB,ETYyC,OFiBrB,AW7B3B,EX6B4B,CEjBF,WFgBd;AUJX,AVMe,AElB2C,ASZ3D,GDSA,CVqBgB,AElB2C,CQYzD,CAAC6B,ACxBckB,EX8BG,CElB4C,CFkB3C,CElB6C7D,KFgBtD,AEhB2D,CQYrE,ARZsET,CQHxE,ACTA,EDdkC,CAuClC,IRb0B;AFmBV,AEnBkE,IFmBlE,AEnBkE,KFmB7D,EAAE9B,CEnBmE,EAAE,EFgBhF,EEhBc;AQezB,AVKe,AEpBkF,ASXlG,IX+BgB,AEpBkF,EQe3FuF,EVKa,EAAC,EEpBqF,EAAE9C,KQexF,GAAG,AVCX,EUDX,MC1BoBpC,cAAc,CAACgG,WAAf,EAArB;AD2BC,AVKe,AErBU,ASX1B,IXgCgB,AEvBR,EQkBHb,AC3BGc,MXgCgB,EAAE/F,AWhC1B,ID2BiB,GAAC,IAAjB,AVAW,MEfQ,QSZZ+F,QAAR;AXgCuC,AEpBZ,IFoBY,AEpBZ,IAAI,EAAC,EFoBe,EAAE,MEpB7B;AQgBnB,AVDW,AEf+B,ASV3C,IXwBQ,AEdmC,EAAE,ASVvCC,ETUwC,KSVjC,GAAG,ETUI,CFqBR,MW/BNA,OAAU,CAACzE,KD0Ba8B,GC1Bd,EAAU5B,CD0BU,CAAC6B,MC1BrB,CD0Bc,CAAeS,AC1BN,MD0BT,CAA7B,uCAAoD;AAAhD,AVKe,AErBqC,ASTrDxD,IX8BgB,AErBqC,ASTrDA,IX8BoB,CErBsC,ASTrD,CX8BgB,AW9Bf,CTSsDyB,KAAK,CAACP,KST7D,EAAc,CTSH;AQgBf,AVKO,AErBoE,ASRxEjB,ITQwE,ESRxEA,EDwBI0E,IRhB4E,ASR1E,EXsBN,AEdkF,ASR3E,CXiBX,CUOC,AVRL,EERoB,ESTG;ADyBlB,AVUR,AE1BmG,ASPxFzE,ITOwF,ESPxFA,EDuBa0E,IAAhB,ARhBmG,CSPzF,CTO2FjD,CSPzF;ATOG,ASNR,ITGJ,eAII,KSPgB;ADuBpB+C,ARhBY,ASRH,IDwBTA,ARhBY,GSVG,CTUC,EAAC,MQgBL,gBACR;AAAK,ARjBL,ASLJvE,MDsBS,ACtBTA,GDsBY,CCtBR,C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","file":"knowYourGreens.6ddb6302.js","sourceRoot":"../src","sourcesContent":["export default function Homepage(props) {\n    const {isLoggedIn} = props;\n    if (isLoggedIn){\n        return (\n            <div className=\"pageContents\">\n                <h1>Welcome!</h1>\n                <h1>Know Your Greens</h1>\n                <div>Care instructions for your green housemates.</div>\n            </div>\n        );\n    }\n    return (\n            <div className=\"pageContents\">\n                <h1>Know Your Greens</h1>\n                <div>Care instructions for your green housemates.</div>\n            </div>\n        );  \n}\n","\nexport default function SearchBar() {\n    const [plant, searchPlant] = React.useState('');\n    const [isPlant, setPlant] = React.useState(true);\n    const history = ReactRouterDOM.useHistory();\n\n    const handleInput = (evt) => {\n        searchPlant(evt.target.value)\n    }\n\n    React.useEffect(()=>{\n        \n    })\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        fetch('/plant/<plantname>',{\n            method:\"POST\",\n            headers:{\n                'Content-Type':'application/json'\n            },\n            body: JSON.stringify({\n                'plantname' : plant\n            })\n        })\n        .then((response)=>response.json())\n        .then((data)=>{\n            if(data==null){\n                console.log(data)\n                setPlant(false)\n            }\n            else{\n                setPlant(true)\n                history.push(`/plants/${plant}`) \n            }\n        }) \n    }\n    \n    return (\n        <div className=\"pageContents\">\n            {!isPlant && \n                <div>Hmmm this doesn't exist in our database. Please try with another plant name.</div>}\n            <div>Worried about your plants? Not sure how to care for your new green housemates?</div>\n            <div>Enter a name to find out how to take care of your plants!</div>\n            <form onSubmit={handleSubmit}>\n                <input \n                    placeholder=\"Plant Name\" \n                    type=\"text\" \n                    value={plant} \n                    name=\"plant_name\" \n                    onChange={handleInput} required={true}/>\n                <button type=\"submit\">Search</button>\n            </form>\n            \n        </div>\n    );\n}","export default function Login(props) {\n    //change setUser to something else -> convention for useState\n    const {setUser,isValid} = props;\n    const [username, setUsername] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const handleUsername = (evt) => {\n        setUsername(evt.target.value)\n    }\n    const handlePassword = (evt) => {\n        setPassword(evt.target.value)\n    }\n\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        setUser(username,password)\n    }\n\n    return(\n        <div className=\"pageContents\">\n             {!isValid && \n                <div>Uh oh, login credentials don't look right..</div>}\n            <h1>Log In</h1>\n            <form onSubmit={handleSubmit}>\n                Enter Username<input type=\"text\" name=\"username\" required={true} onChange={handleUsername} />\n                Password<input type=\"password\" name=\"password\" required={true} onChange={handlePassword}/>\n                <input type=\"submit\"/>\n            </form>\n        </div>\n    )\n}\n\n","export default function SignUp(props) {\n    const {setUser,isNewUser} = props;\n    console.log(isNewUser)\n    const history = ReactRouterDOM.useHistory();\n    const [state, setState] = React.useState({\n        username : \"\",\n        password : \"\",\n        name : \"\"\n    })\n    \n    const handleChange = (evt) => {\n        const {id, value} = evt.target\n        setState((prevState)=>({\n            ...prevState,\n            [id]:value\n        }))\n    }\n    const handleSubmit = (evt) => {\n        evt.preventDefault();\n        setUser(state.username,state.password,state.name)\n    }\n    return (\n        <div className=\"pageContents\">\n            {!isNewUser &&\n                <div>User exists, please pick another username!</div>}\n            <h1>Sign Up</h1>\n            <form onSubmit = {handleSubmit}>\n                First Name<input type=\"name\" id = \"name\" value={state.name} required={true} onChange={handleChange}/>\n                Enter Username<input type=\"text\" id=\"username\" value={state.username} required={true} onChange={handleChange} />\n                Password<input type=\"password\" id=\"password\" value={state.password} required={true} onChange={handleChange}/>\n                <button type=\"submit\">Sign up!</button>\n            </form>\n        </div>  \n    );\n}\n","export default function AddToFavorites(props){\n    const {isLoggedIn,fav,onAddToFavorites,onRemoveFromFavorites,name} = props;\n    const onAddFavs = (evt) => {\n        evt.preventDefault();\n        onAddToFavorites(name)\n    }\n\n    const onRemoveFavs = (evt) => {\n        evt.preventDefault();\n        onRemoveFromFavorites(name)\n    }\n    \n\n    return(\n        <div className=\"pageContents\"> \n            {(isLoggedIn) &&  \n                (fav ? \n                    <button onClick={onRemoveFavs}>Remove from Favorites</button> :\n                    <button onClick={onAddFavs}>Add to Favorites</button>)       \n            }\n        </div>\n    )\n}","import AddToFavorites from './AddToFavorites'\n\nexport default function PlantCard(props){\n    const {plant_id,name,img, isLoggedIn, favorites, onAddToFavorites, onRemoveFromFavorites} = props;\n    let fav=false;\n    for(let plant of favorites){\n        if(plant['name']==name){\n          fav = true;  \n        }\n    }\n\n    //look into \"includes\"/verify keys\n\n    return(\n        <div key={plant_id} className=\"plant-card\">\n            <h2>{name}</h2>\n            <img src={img}/>\n            <AddToFavorites isLoggedIn={isLoggedIn} \n                            fav={fav} name={name} \n                            onAddToFavorites={onAddToFavorites}\n                            onRemoveFromFavorites={onRemoveFromFavorites}\n                            />\n        </div>\n    )\n}\n","export default function NavigateToPlant(props){\n    const {plant} = props;\n    const history = ReactRouterDOM.useHistory();\n    const onShowDetails = () => {\n        history.push(`/plants/${plant.name}`) \n    }\n\n    return(\n        <div className=\"pageContents\">\n            <button onClick={onShowDetails}>View Details</button>\n        </div>\n    )\n}","import PlantCard from './PlantCard'\nimport NavigateToPlant from './NavigateToPlant'\n\nexport default function Favorites(props){\n    const {isLoggedIn, favorites, onAddToFavorites, onRemoveFromFavorites} = props;\n    const favoritePlants = [];\n    let isFav=false;\n    let favCard = null;\n    for(let fav in favorites){\n        if(!favorites){\n            isFav=false\n        }\n        else{\n            isFav=true;\n            for (const item of Object.entries(favorites[fav])){ \n                favCard = (\n                    <div className=\"plant-card\" key={favorites[fav]['plant_id']}>\n                         <PlantCard\n                            name = {favorites[fav]['name']}\n                            img = {favorites[fav]['img']}\n                            favorites = {favorites}\n                            isLoggedIn = {isLoggedIn}\n                            onAddToFavorites = {onAddToFavorites}\n                            onRemoveFromFavorites = {onRemoveFromFavorites}\n                        />\n                          <NavigateToPlant plant={favorites[fav]} />\n                    </div>\n                  )\n              }\n          favoritePlants.push(favCard)\n        }\n      }\n    return(\n        \n        <div className=\"pageContents\">\n            <div><h1>Favorites</h1></div>   \n            {!isFav && \n                <div>This looks a little empty right now, add some plants to your list of favorites!</div>}\n            <div>{favoritePlants}</div>\n        </div>\n        \n    )\n}","export default function Nav(props){\n    const {isLoggedIn, logUserOut} = props;\n    function onLogout(evt){\n        evt.preventDefault();   \n        window.localStorage.removeItem('favPlants')\n        logUserOut()\n    }\n    return(\n        <nav>\n            <ul className='nav-links'>\n                <ReactRouterDOM.NavLink to=\"/\">\n                    <li>know your greens</li>\n                </ReactRouterDOM.NavLink>\n                <ReactRouterDOM.NavLink to=\"/all-plants\">\n                    <li>All Plants</li>\n                </ReactRouterDOM.NavLink>\n                <ReactRouterDOM.NavLink to=\"/favorites\">\n                    {isLoggedIn &&\n                        (<li>My Favorites</li>)\n                    }\n                </ReactRouterDOM.NavLink>\n                <ReactRouterDOM.NavLink to=\"/logout\" onClick = {onLogout}>\n                    {isLoggedIn &&\n                        (<li>Logout</li>)\n                    }\n                </ReactRouterDOM.NavLink>\n                <ReactRouterDOM.NavLink to=\"/login\">\n                    {!isLoggedIn && \n                        (<li>Login</li>)\n                    }\n                </ReactRouterDOM.NavLink>\n                <ReactRouterDOM.NavLink to=\"/sign-up\">\n                    {!isLoggedIn && \n                        (<li>Sign Up</li>)\n                    }\n                </ReactRouterDOM.NavLink>\n            </ul>\n        </nav>\n    );\n}\n","import PlantCard from './PlantCard'\nimport NavigateToPlant from './NavigateToPlant'\n\nexport default function AllPlants(props) {\n    const {isLoggedIn,favorites,onAddToFavorites,onRemoveFromFavorites} = props;\n    const [plants, getPlants] = React.useState({});\n        \n    React.useEffect(()=>{\n        fetch('/api/all-plants')\n        .then((response)=>response.json())\n        .then((data)=>{\n            getPlants(data);\n        })\n    },[]);\n\n    const plantCards = [];\n    for(const plant of Object.values(plants)){\n        const plantCard = (\n            <div className=\"plant-card\" key={plant.id}>\n                <PlantCard\n                    name = {plant.name}\n                    img = {plant.img}\n                    isLoggedIn = {isLoggedIn}\n                    favorites = {favorites}\n                    onAddToFavorites = {onAddToFavorites}\n                    onRemoveFromFavorites = {onRemoveFromFavorites}\n                />\n                <NavigateToPlant plant={plant} />  \n            </div>\n        );\n        plantCards.push(plantCard);\n    }\n    return (\n        <div className=\"pageContents\">\n            <h1>All Plants</h1>\n            <div>{plantCards}</div>\n        </div>\n    );\n}","\nexport default function VarietalCard(props){\n    const {name,sunlight,water,humidity,toxicity,temperature} = props;\n    return(\n        <div>\n            <h1>{name}</h1>\n            <h2>Sunlight</h2>\n            <div>{sunlight}</div>\n            <h2>Water</h2>\n            <div>{water}</div>\n            <h2>Humidity</h2>\n            <div>{humidity}</div>\n            <h2>Toxicity</h2>\n            <div>{toxicity}</div>\n            <h2>Temperature</h2>\n            <div>{temperature}</div>\n        </div>\n    )\n}","import VarietalCard from './VarietalCard'\n\nexport default function AllVarietals(){\n    const [parentPlant, setParentPlant] = React.useState({});\n    const [plants, setPlants] = React.useState({});\n    const {plantName} = ReactRouterDOM.useParams();\n    let img='';\n\n    React.useEffect(()=>{\n        fetch('/api/results',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'plant_name': plantName\n            })\n        })\n        .then((response)=>response.json())\n        .then((data)=>{\n            setPlants(data);\n        })\n\n    },[plantName])\n\n    React.useEffect(()=>{\n        fetch(`/api/plant/${plantName}`,{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'plantname': plantName\n            })\n        })\n        .then((response)=>response.json())\n        .then((data)=>{\n            setParentPlant(data);\n        })\n\n    },[parentPlant])\n    // if empty return loading state\n\n     const varietalCards = [];\n     let varietalCard=null;\n     for(const [varietal,care] of Object.entries(plants)){\n            varietalCard = (\n                <div key={varietal}>\n                    <VarietalCard\n                        name={varietal}\n                        sunlight={care.Sunlight}\n                        water={care.Water}\n                        humidity={care.Humidity}\n                        toxicity={care.Toxicity}\n                        temperature={care.Temperature}\n                    />\n                </div>\n                );\n            varietalCards.push(varietalCard)\n        }\n\n     return(\n         <div className=\"pageContents\">\n             <h1>{plantName}</h1>   \n             <img src={parentPlant}></img>\n             <div>{varietalCards}</div>\n         </div>\n     )\n\n}\n","import Homepage from './components/Homepage'\nimport SearchBar from './components/SearchBar'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport Favorites from './components/Favorites'\nimport Nav from './components/Nav'\nimport AllPlants from './components/AllPlants'\nimport AllVarietals from './components/AllVarietals'\n\nexport default function App() {\n    \n    //const [searchTerm, setSearchTerm] = React.useState({});\n    const [user, setUser] = React.useState(false);\n    const [isValid, setValid] = React.useState([]);\n    const [isNewUser, setNewUser] = React.useState([]);\n    const history = ReactRouterDOM.useHistory();\n    const [favorites,setFavorites] = React.useState([])\n    const { pathname } = ReactRouterDOM.useLocation();\n   \n    const onLogin = (username,password) => {\n        fetch('/api/login',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'username': username,\n                'password': password\n            })\n        })\n        .then((response)=>response.json())\n        .then((data)=>{\n            if(data.isLoggedIn==false){\n                setValid(false)\n                setUser(false)\n\n            }\n            else{\n                setValid(true)\n                setUser(true)\n                setFavorites(favorites)\n                history.push('/')\n            }\n        })\n    }\n    const onLogout = () => {\n        fetch('/api/logout',{\n            method:\"GET\",\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        })\n        .then((response)=>response.json())\n        .then(()=>{\n            console.log('Logout successful!')\n            setUser(false)\n            setValid([])\n            history.push('/')\n        })\n    }\n\n    const onCreateUser = (username, password, name) => {\n        fetch('/api/signup',{\n            method:\"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'name':name,\n                'username': username,\n                'password': password\n            })\n        })\n        .then((response)=>response.json())\n        .then((data)=>{\n            if(data.isUser==true){\n                setNewUser(false)\n            }\n            else{\n                setNewUser(true)\n                setUser(true)\n                history.push('/')\n            }\n            \n        })\n    }\n\n    const onAddToFavorites = (name) => {\n        fetch('/api/add-favorites',{\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'plant': name, \n            })\n        })\n        .then((response)=>response.json())\n        .then((data)=>{\n            setFavorites((favs)=>[...favs,data])\n        })\n    }\n\n    const onRemoveFromFavorites = (name) => {\n        const updatedFavorites = favorites.filter((fav)=>fav.name!=name) //select only where the condition is true\n        setFavorites(updatedFavorites);\n        fetch('/api/remove-favorite',{\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                'plant': name, \n            })\n            //.catch()\n        })\n    }\n\n    React.useEffect(()=>{\n        if(user){\n            fetch('/api/show-favorites',{\n                method:\"POST\",\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then((response)=> response.json())\n            .then((data)=>{\n                setFavorites(data)   \n            })\n        }\n    },[user]) \n    \n    return (\n        <React.Fragment>\n            <div className=\"App\">\n                <Nav isLoggedIn={user} logUserOut={onLogout} />\n                <ReactRouterDOM.Route exact path=\"/\">\n                    <Homepage isLoggedIn={user}/>\n                    <SearchBar />\n                </ReactRouterDOM.Route>\n\n                <ReactRouterDOM.Route exact path=\"/all-plants\"> \n                    <AllPlants isLoggedIn={user} \n                               favorites={favorites}\n                               onAddToFavorites={onAddToFavorites}\n                               onRemoveFromFavorites={onRemoveFromFavorites}/>\n                </ReactRouterDOM.Route>\n\n                <ReactRouterDOM.Route exact path=\"/plants/:plantName\"> \n                    <AllVarietals />\n                </ReactRouterDOM.Route>\n\n                <ReactRouterDOM.Route exact path=\"/sign-up\">\n                    <SignUp setUser={onCreateUser} isNewUser={isNewUser}/>\n                </ReactRouterDOM.Route>\n                <ReactRouterDOM.Route exact path=\"/login\">\n                    <Login setUser={onLogin} isValid = {isValid} />\n                </ReactRouterDOM.Route>\n                \n                <ReactRouterDOM.Route exact path=\"/favorites\">\n                    {(user)? \n                            <Favorites \n                                isLoggedIn={user}\n                                favorites={favorites} \n                                onAddToFavorites={onAddToFavorites}\n                                onRemoveFromFavorites={onRemoveFromFavorites}\n                            />\n                            :\n                            <ReactRouterDOM.Redirect to=\"/login\"/> \n                    }\n                </ReactRouterDOM.Route>\n                <ReactRouterDOM.Route exact path=\"/logout\">\n                    <Homepage isLoggedIn={user} />\n                </ReactRouterDOM.Route>\n            </div>\n        </React.Fragment>\n    );\n}\n\nReactDOM.render(<ReactRouterDOM.BrowserRouter>\n    <App />\n</ReactRouterDOM.BrowserRouter>, document.querySelector('#root'));"]}